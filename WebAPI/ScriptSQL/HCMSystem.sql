CREATE SCHEMA hcm;

GRANT USAGE ON SCHEMA hcm TO postgres;


CREATE TABLE IF NOT EXISTS hcm.countries
	(country_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 country_name VARCHAR(50) NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.experience_levels
	(experience_level_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 experience_level_title VARCHAR(20) NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.education_levels
	(education_level_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 education_level_title VARCHAR(20) NOT NULL
	);
	
CREATE TABLE IF NOT EXISTS hcm.user_roles
	(user_role_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 user_role_title VARCHAR(21) NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.hcm_users
	(user_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 username VARCHAR(50) NOT NULL UNIQUE,
	 password_hash bytea NOT NULL,
	 user_role_id INT REFERENCES hcm.user_roles(user_role_id) ON DELETE RESTRICT NOT NULL
	 password_salt bytea NOT NULL
	 
	);

CREATE TABLE IF NOT EXISTS hcm.payrolls
	(payroll_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 hourly_rate INT NOT NULL,
	 gross_salary INT NOT NULL,
	 net_salary INT NOT NULL,
	 effective_date DATE NOT NULL,
	 last_changed DATE NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.departments
	(department_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 department_name VARCHAR(50) NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.jobs
	(job_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 job_title VARCHAR(50) NOT NULL,
	 department_id INT REFERENCES hcm.departments(department_id) ON DELETE RESTRICT NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.projects
	(project_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 project_name VARCHAR(50) NOT NULL,
	 date_started DATE NOT NULL,
	 date_ended DATE,
	 project_status VARCHAR(20)
	);

CREATE TABLE IF NOT EXISTS hcm.branches
	(branch_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 branch_name VARCHAR(50) NOT NULL,
	 branch_country_id INT REFERENCES hcm.countries(country_id) ON DELETE RESTRICT NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.trainings
	(training_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	training_title VARCHAR(20),
	skills_covered VARCHAR(255)
	);

CREATE TABLE IF NOT EXISTS hcm.employees
	(employee_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 first_name VARCHAR(50) NOT NULL,
	 last_name VARCHAR(50) NOT NULL,
	 job_id INT REFERENCES hcm.jobs(job_id) ON DELETE RESTRICT NOT NULL,
	 project_id INT REFERENCES hcm.projects(project_id) ON DELETE RESTRICT NOT NULL,
	 experience_level_id INT REFERENCES hcm.experience_levels(experience_level_id) ON DELETE RESTRICT NOT NULL,
	 education_level_id INT REFERENCES hcm.education_levels(education_level_id) ON DELETE RESTRICT NOT NULL,
	 payroll_id INT REFERENCES hcm.payrolls(payroll_id) NOT NULL UNIQUE,
	 branch_id INT REFERENCES hcm.branches(branch_id) NOT NULL,
	 email varchar(50) NOT NULL,
	 user_id INT REFERENCES hcm.hcm_users(user_id) NOT NULL UNIQUE,
	 date_of_birth DATE NOT NULL,
	 employee_address VARCHAR(255) NOT NULL,
	 nationality_id INT REFERENCES hcm.countries(country_id) ON DELETE RESTRICT NOT NULL,
	 gender VARCHAR(20) NOT NULL,
	 date_of_employment DATE NOT NULL,
	 date_of_leaving DATE
	);

CREATE TABLE IF NOT EXISTS hcm.employees_job_history
	(employee_job_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 employee_id INT REFERENCES hcm.employees(employee_id) ON DELETE CASCADE NOT NULL,
	 job_id INT REFERENCES hcm.jobs(job_id) ON DELETE CASCADE NOT NULL,
	 date_started DATE NOT NULL,
	 date_ended DATE
	);

CREATE TABLE IF NOT EXISTS hcm.employees_branches_history
	(employee_branch_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 employee_id INT REFERENCES hcm.employees(employee_id) ON DELETE CASCADE NOT NULL,
	 branch_id INT REFERENCES hcm.branches(branch_id) ON DELETE CASCADE NOT NULL,
	 date_started DATE NOT NULL,
	 date_ended DATE
	);

CREATE TABLE IF NOT EXISTS hcm.trainings_history
	(employee_training_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 employee_id INT REFERENCES hcm.employees(employee_id) ON DELETE CASCADE NOT NULL,
	 training_id INT REFERENCES hcm.trainings(training_id) ON DELETE CASCADE NOT NULL
	);

CREATE TABLE IF NOT EXISTS hcm.projects_teams_history
	(employee_project_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	 employee_id INT REFERENCES hcm.employees(employee_id) ON DELETE CASCADE NOT NULL,
	 project_id INT REFERENCES hcm.projects(project_id) ON DELETE CASCADE NOT NULL
	);
